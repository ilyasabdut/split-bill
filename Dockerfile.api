# syntax=docker/dockerfile:1.4

FROM python:3.12-slim as builder

WORKDIR /opt/app

RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    unzip \
    && rm -rf /var/lib/apt/lists/*

RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

ARG TARGETARCH
RUN case ${TARGETARCH} in \
        amd64) UV_ARCH="x86_64-unknown-linux-gnu";; \
        arm64) UV_ARCH="aarch64-unknown-linux-gnu";; \
        *) echo "Unsupported architecture: ${TARGETARCH}" >&2; exit 1 ;; \
    esac && \
    curl -LsSf https://github.com/astral-sh/uv/releases/latest/download/uv-${UV_ARCH}.tar.gz \
    | tar -xz -C /opt/app && mv /opt/app/uv-${UV_ARCH}/uv /opt/venv/bin/uv && \
    chmod +x /opt/venv/bin/uv && \
    rm -rf /opt/app/uv-${UV_ARCH}

RUN uv --version

COPY pyproject.toml ./

RUN uv pip compile \
    pyproject.toml \
    -o requirements.txt

RUN uv pip install -r requirements.txt

RUN uvicorn --version
RUN python -c "import fastapi; print(f'FastAPI version: {fastapi.__version__}')"

FROM python:3.12-slim as final

WORKDIR /app

RUN groupadd --gid 1001 appuser && \
    useradd --uid 1001 --gid 1001 --shell /bin/bash --create-home appuser

COPY --from=builder --chown=appuser:appuser /opt/venv /opt/venv
COPY --chown=appuser:appuser ./api/src /app/src
RUN chown -R appuser:appuser /app

USER appuser

EXPOSE 8000

ENV PYTHONPATH=/app
ENV PATH="/opt/venv/bin:$PATH"

HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8000/ || exit 1

CMD ["uvicorn", "src.api:app", "--host", "0.0.0.0", "--port", "8000"]